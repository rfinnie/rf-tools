#!/bin/sh

set -e

if [ -n "${DEBUG}" ]; then
    set -x
fi

[ -n "${CHROOT_BASE}" ] || CHROOT_BASE="/srv/chroot"
[ -n "${CHROOT_BLACKLIST}" ] || CHROOT_BLACKLIST="gentoo"

cd /

failed=""
for c in $(cd "${CHROOT_BASE}" && ls -1); do
    [ -n "$c" ] || continue
    [ -d "${CHROOT_BASE}/$c" ] || continue
    [ -d "${CHROOT_BASE}/$c/usr/bin" ] || continue
    blacklisted=0
    for bl in $CHROOT_BLACKLIST; do
        [ "$c" != "$bl" ] || blacklisted=1
    done
    [ "$blacklisted" = "0" ] || continue

    if [ -n "${DEBUG}" ]; then
        echo "Starting $c"
        CHRONIC=""
    else
        CHRONIC="chronic"
    fi
    if [ -e "${CHROOT_BASE}/$c/etc/lsb-release" ] && \
        grep -q "DISTRIB_ID=Ubuntu" "${CHROOT_BASE}/$c/etc/lsb-release" && \
        grep -q "development branch" "${CHROOT_BASE}/$c/etc/lsb-release"; then
        if ! $CHRONIC schroot -c $c -- /bin/sh -c "apt-get --allow-releaseinfo-change update && apt-get -u -y dist-upgrade && apt-get clean" 2>&1; then
            failed="$failed $c"
            echo "=== $c FAILED ==="
        fi
    elif [ -e "${CHROOT_BASE}/$c/etc/debian_version" ]; then
        if ! $CHRONIC schroot -c $c -- /bin/sh -c "apt-get update && apt-get -u -y dist-upgrade && apt-get clean" 2>&1; then
            failed="$failed $c"
            echo "=== $c FAILED ==="
        fi
    elif [ -e "${CHROOT_BASE}/$c/usr/bin/dnf" ]; then
        if ! $CHRONIC schroot -c $c -- /bin/sh -c "dnf -y update && dnf clean packages" 2>&1; then
            failed="$failed $c"
            echo "=== $c FAILED ==="
        fi
    elif [ -e "${CHROOT_BASE}/$c/usr/bin/yum" ]; then
        if ! $CHRONIC schroot -c $c -- /bin/sh -c "yum -y update" 2>&1; then
            failed="$failed $c"
            echo "=== $c FAILED ==="
        fi
    fi
done

if [ -n "$failed" ]; then
    echo "FAILED:$failed"
    exit 1
fi
