#!/usr/bin/perl -w

# apt-rogue-packages - Compares installed Debian packages to available
# Copyright (C) 2010-2021 Ryan Finnie <ryan@finnie.org>
# SPDX-License-Identifier: MPL-2.0

use strict;
use warnings;

my($statusfn, @aptfns);
if($ARGV[0]) {
  $statusfn = $ARGV[0];
} else {
  $statusfn = "/var/lib/dpkg/status";
}
if($ARGV[1]) {
  @aptfns = @ARGV[1..$#ARGV];
} else {
  @aptfns = glob("/var/lib/apt/lists/*_Packages");
}

my %missing = ();

# Gather the status packages
open(FILE, $statusfn) || die("Cannot open $statusfn: $!\n");
processstatus(*FILE, "status");
close(FILE);

# Process the available apt caches
foreach my $file (@aptfns) {
  open(FILE, $file) || die("Cannot open $file: $!\n");
  processstatus(*FILE, "aptfiles");
  close(FILE);
}

# Output remaining missing packages
foreach my $p (sort keys %missing) {
  print "$p\n";
}

sub processstatus {
  my($fh) = shift;
  my($mode) = shift;
  my($package, $status, $version, $arch);

  while(my $l = <$fh>) {
    chomp $l;
    unless($l eq "") {
      if($l =~ /^Package: (.*?)$/) { $package = $1; }
      if($l =~ /^Status: (.*?)$/) { $status = $1; }
      if($l =~ /^Version: (.*?)$/) { $version = $1; }
      if($l =~ /^Architecture: (.*?)$/) { $arch = $1; }
      next;
    }

    # At this point the block is finished.
    if(($mode eq "status") && (($status =~ /not-installed/) || !$package || !$status || !$version || !$arch)) {
      # If I can't figure out the block, (possibly) warn and ignore it.
      unless($status =~ /not-installed/) {
        print STDERR "WARN: Cannot figure out block (package '$package', status '$status', version '$version', arch '$arch')\n";
      }
      $package = "";
      $status = "";
      $version = "";
      $arch = "";
      next;
    }

    # Append the architecture.  If it's "all", don't include it. ("all"
    # is an acceptable architecture in apt operations, but isn't
    # needed.)
    my($packagearch);
    if($arch eq "all") {
      $packagearch = $package;
    } else {
      $packagearch = "$package:$arch";
    }

    if($mode eq "status") {
      # Add status package to be checked later
      $missing{"$packagearch=$version"} = 1;
    } else {
      # Remove from status missing, if found
      if($missing{"$packagearch=$version"}) {
        delete($missing{"$packagearch=$version"});
      }
    }

    $package = "";
    $status = "";
    $version = "";
    $arch = "";
  }

}
